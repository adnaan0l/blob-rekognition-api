service: blobs-recognition-api

frameworkVersion: ">=1.1.0"

provider:
  name: aws
  region: ap-south-1
  stage: dev
  runtime: python3.8
  environment: 
    DYNAMODB_TABLE: ${self:service}-${opt:region, self:provider.region}-${file(./config/${opt:stage, 'dev'}.json):dynamodb_table}
    S3_BUCKET : ${self:service}-${opt:region, self:provider.region}-${file(./config/${opt:stage, 'dev'}.json):s3_bucket}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
          Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketVersions
          Resource:
            - 'arn:aws:s3:::${self:provider.environment.S3_BUCKET}'
            - 'arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*'

custom:
  documentation:
    models:
      - name: GetBlobInfoResponse
        description: GET Document response model
        contentType: application/json
        schema: ${file(models/GetBlobInfoResponse.json)}
      - name: PostInfoResponse
        description: POST Info response model
        contentType: application/json
        schema: ${file(models/PostInfoResponse.json)}
      - name: PostInfoRequest
        description: POST Info request model
        contentType: application/json
        schema: ${file(models/PostInfoResponse.json)}
      - name: PostErrorResponse
        description: POST Error response model
        contentType: application/json
        schema: ${file(models/PostErrorResponse.json)}
      - name: GetErrorResponse
        description: GET Error response model
        contentType: application/json
        schema: ${file(models/GetErrorResponse.json)}

layers:
  dependancies:
    path: layers/dependancies
    compatibleRuntimes:
      - python3.8
    description: "Dependencies requests module for the blob API"

functions:
  create:
    handler: functions/create.create
    events:
      - http:
          path: /blobs
          method: post
  get:
    handler: functions/get.get
    events:
      - http:
          path: /blobs/{blob_id}
          method: get
  process:
    handler: functions/process.process
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .jpg
  callback:
    handler: functions/callback.callback
    events:
      - http:
          path: /callback/{blob_id}
          method: post
  return:
    handler: functions/return.return_blob
    layers:
      - { Ref: DependanciesLambdaLayer }
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - BlobsDynamoDbTable
              - StreamArn
          batchSize: 1

resources:
  Resources:
    BlobsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_IMAGE